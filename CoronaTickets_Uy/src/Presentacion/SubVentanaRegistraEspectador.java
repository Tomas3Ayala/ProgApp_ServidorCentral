/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import logica.Fabrica;
import logica.clases.Espectaculo;
import logica.clases.Espectador;
import logica.clases.Funcion;
import logica.clases.Registro_funcion;

/**
 *
 * @author Tomas
 */
public class SubVentanaRegistraEspectador extends javax.swing.JFrame {

    private String prev_espectadores_item;

    /**
     * Creates new form SubVentanaRegistraEspectador
     */
    public SubVentanaRegistraEspectador(RegistraEspectadorEnFuncionEspectaculo reefe, String prefix) {
        initComponents();
        this.reefe = reefe; // esto solo sirve para poder actualizar la lista de funciones en la ventana de registra de funcion
        this.setTitle(prefix + " - " + this.getTitle());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista_espectadores = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista_registros_canjeables = new javax.swing.JList<>();
        boton_canjear_registros = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        boton_registrar = new javax.swing.JButton();
        label_costo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccione espectador y registrelo");

        jLabel1.setText("Espectadores:");

        lista_espectadores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lista_espectadores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_espectadores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_espectadoresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista_espectadores);

        jLabel2.setText("Registros canjeables (seleccione tres para canjear):");

        lista_registros_canjeables.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lista_registros_canjeables);

        boton_canjear_registros.setText("Canjear registros por un registro gratis");
        boton_canjear_registros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_canjear_registrosActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        boton_registrar.setText("Registrar");
        boton_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registrarActionPerformed(evt);
            }
        });

        label_costo.setText("costo");

        jLabel4.setText("Costo de registro: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_costo)
                        .addGap(18, 18, 18)
                        .addComponent(boton_registrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_canjear_registros)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(boton_registrar)
                    .addComponent(boton_canjear_registros)
                    .addComponent(jLabel4)
                    .addComponent(label_costo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void boton_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registrarActionPerformed
        if (!lista_espectadores.isSelectionEmpty()) {
            String item = (String) lista_espectadores.getSelectedValue();
            System.out.println("Registrando de forma normal: " + item);
            
            espectador_selected = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_espectador_de_nickname(item);
            
            Fabrica.getInstance().getInstanceControladorEspectaculo().registrar_espectador_en_funcion_de_espectaculo(espectador_selected.getId(), funcion_selected.getId(), costo);

            reefe.actualizar_lista_funciones();
            dispose();
        }
        else
            mostrar_error_espectador_no_seleccionado();
    }//GEN-LAST:event_boton_registrarActionPerformed

    private void mostrar_error_espectador_no_seleccionado() {
        JOptionPane.showMessageDialog(this, "Primero seleccione un espectador antes de registrar");
    }
    
    private void lista_espectadoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_espectadoresValueChanged
        String item = (String) lista_espectadores.getSelectedValue();
        if (!item.equals(prev_espectadores_item)) {
            System.out.println(item);
            prev_espectadores_item = item;
            
            espectador_selected = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_espectador_de_nickname(item);
            ArrayList<Registro_funcion> registros = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_registros_de_espectador(espectador_selected.getId());
            ArrayList<String> lista = new ArrayList<>();
            registros.forEach((Registro_funcion registro_funcion) -> {
                lista.add("Registro a funci√≥n " + Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_funcion_por_id(registro_funcion.getId_funcion()).getNombre() + " por el costo de $" + registro_funcion.getCosto());
            });
            lista_registros_canjeables.setListData((String[]) lista.toArray(new String[lista.size()]));
            
            costo = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_costo_final_de_registro(espectador_selected.getId(), espectaculo_selected.getId()).intValue();
            label_costo.setText("$" + costo);
        }
    }//GEN-LAST:event_lista_espectadoresValueChanged

    private void boton_canjear_registrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_canjear_registrosActionPerformed
        if (!lista_espectadores.isSelectionEmpty()) {
            
            // obtener elementos seleccionados de lista_registros_canjeables
            int[] lista = lista_registros_canjeables.getSelectedIndices();
            if (lista.length == 3) {
                ArrayList<Registro_funcion> registros = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_registros_de_espectador(espectador_selected.getId());
                for (int s : lista) {
                    System.out.println(s);
                    Fabrica.getInstance().getInstanceControladorEspectaculo().canjear_registro(registros.get(s).getId_funcion(), registros.get(s).getId_espectador());
                }

                // agregando registro gratis
                String item = (String) lista_espectadores.getSelectedValue();
                System.out.println("Registrando canjeando: " + item);

                espectador_selected = Fabrica.getInstance().getInstanceControladorEspectaculo().obtener_espectador_de_nickname(item);
                Fabrica.getInstance().getInstanceControladorEspectaculo().registrar_espectador_en_funcion_de_espectaculo(espectador_selected.getId(), funcion_selected.getId(), 0);

                // al final actualizamos la lista de funciones y eliminamos la ventana
                reefe.actualizar_lista_funciones();
                dispose();
            }
            else {
                JOptionPane.showMessageDialog(this, "Deberia de seleccionarse exactamente 3 registros para canjearlos por un registro gratis");
            }
            
        }
        else
            mostrar_error_espectador_no_seleccionado();
    }//GEN-LAST:event_boton_canjear_registrosActionPerformed

    private int costo;
    private Funcion funcion_selected;
    private Espectaculo espectaculo_selected;
    private Espectador espectador_selected;
    private RegistraEspectadorEnFuncionEspectaculo reefe;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_canjear_registros;
    private javax.swing.JButton boton_registrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_costo;
    private javax.swing.JList<String> lista_espectadores;
    private javax.swing.JList<String> lista_registros_canjeables;
    // End of variables declaration//GEN-END:variables

    public JList<String> getLista_espectadores() {
        return lista_espectadores;
    }

    public void setLista_espectadores(JList<String> lista_espectadores) {
        this.lista_espectadores = lista_espectadores;
    }

    public JList<String> getLista_registros_canjeables() {
        return lista_registros_canjeables;
    }

    public void setLista_registros_canjeables(JList<String> lista_registros_canjeables) {
        this.lista_registros_canjeables = lista_registros_canjeables;
    }

    public JLabel getLabel_costo() {
        return label_costo;
    }

    public void setLabel_costo(JLabel label_costo) {
        this.label_costo = label_costo;
    }
    
    public Espectaculo getEspectaculo_selected() {
        return espectaculo_selected;
    }

    public void setEspectaculo_selected(Espectaculo espectaculo_selected) {
        this.espectaculo_selected = espectaculo_selected;
    }    

    public Funcion getFuncion_selected() {
        return funcion_selected;
    }

    public void setFuncion_selected(Funcion funcion_selected) {
        this.funcion_selected = funcion_selected;
    }
    
}
